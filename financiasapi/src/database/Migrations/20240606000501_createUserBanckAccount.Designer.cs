// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using financias.src.database.Context;

#nullable disable

namespace financias.database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240606000501_createUserBanckAccount")]
    partial class createUserBanckAccount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("financias.src.models.Banck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bancks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aff79997-841c-4cb4-a4e6-84d4f0e00e8d"),
                            Active = true,
                            Cnpj = "60701190000104",
                            CreatedAt = new DateTime(2024, 6, 5, 21, 5, 0, 844, DateTimeKind.Local).AddTicks(2191),
                            Name = "Itau",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("81a3902a-89b7-459e-a665-2a346ae829e1"),
                            Active = true,
                            Cnpj = "60746948000112",
                            CreatedAt = new DateTime(2024, 6, 5, 21, 5, 0, 844, DateTimeKind.Local).AddTicks(2205),
                            Name = "Bradesco",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("16d9075f-2ced-4358-be10-4cfeefac8647"),
                            Active = true,
                            Cnpj = "90400888000142",
                            CreatedAt = new DateTime(2024, 6, 5, 21, 5, 0, 844, DateTimeKind.Local).AddTicks(2208),
                            Name = "Santander",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("financias.src.models.BanckAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("BanckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BanckId");

                    b.ToTable("BanckAccounts");
                });

            modelBuilder.Entity("financias.src.models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("financias.src.models.UserBancksAccounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BanckAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BanckAccountId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBancksAccounts");
                });

            modelBuilder.Entity("financias.src.models.Banck", b =>
                {
                    b.HasOne("financias.src.models.User", "User")
                        .WithMany("Bancks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("financias.src.models.BanckAccount", b =>
                {
                    b.HasOne("financias.src.models.Banck", "Banck")
                        .WithMany("BanckAccounts")
                        .HasForeignKey("BanckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banck");
                });

            modelBuilder.Entity("financias.src.models.UserBancksAccounts", b =>
                {
                    b.HasOne("financias.src.models.BanckAccount", "BanckAccount")
                        .WithMany("UserBancksAccounts")
                        .HasForeignKey("BanckAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("financias.src.models.User", "User")
                        .WithMany("UserBancksAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BanckAccount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("financias.src.models.Banck", b =>
                {
                    b.Navigation("BanckAccounts");
                });

            modelBuilder.Entity("financias.src.models.BanckAccount", b =>
                {
                    b.Navigation("UserBancksAccounts");
                });

            modelBuilder.Entity("financias.src.models.User", b =>
                {
                    b.Navigation("Bancks");

                    b.Navigation("UserBancksAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
